name: Deploy Spring Boot App to EC2 with Docker Network

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  IMAGE_NAME: tetyana5633/spoonacular:latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get PostgreSQL Password
        id: get-secret
        run: |
          secret=$(aws secretsmanager get-secret-value --secret-id postgres-db-password --query SecretString --output text)
          password=$(echo "$secret" | jq -r .postgres_password)
          echo "POSTGRES_PASSWORD=$password" >> $GITHUB_ENV

      - name: Deploy via SSM Run Command
        run: |
          INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID }}
          echo "Deploying to instance $INSTANCE_ID"

          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy Spring Boot Docker app with shared network" \
            --parameters 'commands=[
              "docker network create spoonacular-network || true",
              "docker stop spoonacular-app || true",
              "docker rm spoonacular-app || true",
              "docker pull '"${{ env.IMAGE_NAME }}"'",
              "docker run -d --name spoonacular-app -p 8080:8080 \
                --network spoonacular-network \
                -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/postgres \
                -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
                -e SPRING_DATASOURCE_PASSWORD=${{ env.POSTGRES_PASSWORD }} \
                '"${{ env.IMAGE_NAME }}"'"
            ]' \
            --output text
